version: "3.9"

services:

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "8080:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabit-user
      RABBITMQ_DEFAULT_PASS: p^UnY8T5ow0#
    networks:
      - "rabbit_network"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: dWsU2J83S7!X
    ports:
      - "27017:27017"
    networks:
      - "mongo_network"

  redis:
    image: redis
    networks:
      - "redis_network"
    
  api:
    build:
      context: ./Api
      dockerfile: Dockerfile.Api
    container_name: customer-profile-api
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - "rabbit_network"
      - "mongo_network"
    environment:
      RabbitMQConnectionString: "amqp://cristiano:123456789@rabbitmq:5672"
      RedisConnectionString: ""
      ViaCep: "https://viacep.com.br/ws"
      MongoDbConnectionString: "mongodb://root:dWsU2J83S7!X@localhost:27017"
      DatabaseName : "CustomerProfile"

  azure-functions:
    build: 
      context: ./Api
      dockerfile: DockerFile.AzureFunction
    container_name: customer-profile-azure-functions
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - "rabbit_network"
      - "mongo_network"
    environment:
      RabbitMQConnectionString: "amqp://cristiano:123456789@rabbitmq:5672"
      RedisConnectionString: ""
      ViaCep: "https://viacep.com.br/ws"
      MongoDbConnectionString: "mongodb://root:dWsU2J83S7!X@localhost:27017"
      DatabaseName : "CustomerProfile"

networks:
  rabbit_network:
    driver: bridge
  mongo_network:
    driver: bridge
  redis_network:
    driver: bridge